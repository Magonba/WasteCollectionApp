{"message":"Some SQL Query","level":"silly","time":"16:37:39:225"}
{"message":"Some SQL Query2","level":"debug","time":"16:37:39:229"}
{"message":"Some SQL Query3","level":"verbose","time":"16:37:39:230"}
{"message":"Some SQL Query4","level":"info","time":"16:37:39:231"}
{"message":"Some SQL Query5","level":"warn","time":"16:37:39:231"}
{"message":"Some SQL Query6","level":"error","time":"16:37:39:232"}
{"message":"psql: error: could not connect to server: Connection refused\n\tIs the server running on host \"localhost\" (127.0.0.1) and accepting\n\tTCP/IP connections on port 5432?\n","level":"warn","time":"16:37:42:349"}
{"message":"psql: error: could not connect to server: Connection refused\n\tIs the server running on host \"localhost\" (127.0.0.1) and accepting\n\tTCP/IP connections on port 5432?\n","level":"warn","time":"16:37:42:625"}
{"message":"psql: error: could not connect to server: Connection refused\n\tIs the server running on host \"localhost\" (127.0.0.1) and accepting\n\tTCP/IP connections on port 5432?\n","level":"warn","time":"16:37:42:941"}
{"message":"psql: error: could not connect to server: Connection refused\n\tIs the server running on host \"localhost\" (127.0.0.1) and accepting\n\tTCP/IP connections on port 5432?\n","level":"warn","time":"16:37:43:212"}
{"message":"psql: error: could not connect to server: Connection refused\n\tIs the server running on host \"localhost\" (127.0.0.1) and accepting\n\tTCP/IP connections on port 5432?\n","level":"warn","time":"16:37:43:487"}
{"message":"psql: error: could not connect to server: Connection refused\n\tIs the server running on host \"localhost\" (127.0.0.1) and accepting\n\tTCP/IP connections on port 5432?\n","level":"warn","time":"16:37:43:784"}
{"message":"psql: error: could not connect to server: Connection refused\n\tIs the server running on host \"localhost\" (127.0.0.1) and accepting\n\tTCP/IP connections on port 5432?\n","level":"warn","time":"16:37:44:92"}
{"message":"psql: error: could not connect to server: Connection refused\n\tIs the server running on host \"localhost\" (127.0.0.1) and accepting\n\tTCP/IP connections on port 5432?\n","level":"warn","time":"16:37:44:376"}
{"message":"Some SQL Query","level":"silly","time":"16:38:25:167"}
{"message":"Some SQL Query2","level":"debug","time":"16:38:25:169"}
{"message":"Some SQL Query3","level":"verbose","time":"16:38:25:170"}
{"message":"Some SQL Query4","level":"info","time":"16:38:25:170"}
{"message":"Some SQL Query5","level":"warn","time":"16:38:25:170"}
{"message":"Some SQL Query6","level":"error","time":"16:38:25:170"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"16:38:25:881"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:2: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:3: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:4: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:5: NOTICE:  schema \"usersprojects\" does not exist, skipping\n","level":"warn","time":"16:38:25:882"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"16:38:26:173"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:2: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:3: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:4: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:5: NOTICE:  schema \"usersprojects\" does not exist, skipping\n","level":"warn","time":"16:38:26:174"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"16:38:26:717"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"16:38:27:85"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"16:38:27:444"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"16:38:27:822"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"16:38:28:185"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"16:38:28:548"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"16:38:28:950"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"16:38:29:340"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"16:38:29:712"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS Fribourg;\nCREATE TABLE IF NOT EXISTS Fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tours (\n  id INT GENERATED ALWAYS AS IDENTITY,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Fribourg.tours(id) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(nodeid, tourid)\n);\n","level":"silly","time":"16:38:30:253"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS Fribourg.tour_nodes;\nDROP TABLE IF EXISTS Fribourg.tours;\nDROP TABLE IF EXISTS Fribourg.resultsvehicles;\nDROP TABLE IF EXISTS Fribourg.results;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions;\nDROP TABLE IF EXISTS Fribourg.vehicletypes;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarios;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions_nodes_waste;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions;\nDROP TABLE IF EXISTS Fribourg.garbagescenarios;\nDROP TABLE IF EXISTS Fribourg.arcs;\nDROP TABLE IF EXISTS Fribourg.nodes;\nDROP SCHEMA IF EXISTS Fribourg;\n","level":"silly","time":"16:38:30:893"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"16:38:31:421"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"16:38:31:894"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS Fribourg;\nCREATE TABLE IF NOT EXISTS Fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tours (\n  id INT GENERATED ALWAYS AS IDENTITY,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Fribourg.tours(id) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(nodeid, tourid)\n);\n","level":"silly","time":"16:38:32:389"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS Fribourg.tour_nodes;\nDROP TABLE IF EXISTS Fribourg.tours;\nDROP TABLE IF EXISTS Fribourg.resultsvehicles;\nDROP TABLE IF EXISTS Fribourg.results;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions;\nDROP TABLE IF EXISTS Fribourg.vehicletypes;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarios;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions_nodes_waste;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions;\nDROP TABLE IF EXISTS Fribourg.garbagescenarios;\nDROP TABLE IF EXISTS Fribourg.arcs;\nDROP TABLE IF EXISTS Fribourg.nodes;\nDROP SCHEMA IF EXISTS Fribourg;\n","level":"silly","time":"16:38:32:976"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"16:38:33:445"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"16:38:33:929"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"16:38:34:282"}
{"message":"Some SQL Query","level":"silly","time":"18:45:9:24"}
{"message":"Some SQL Query2","level":"debug","time":"18:45:9:29"}
{"message":"Some SQL Query3","level":"verbose","time":"18:45:9:29"}
{"message":"Some SQL Query4","level":"info","time":"18:45:9:30"}
{"message":"Some SQL Query5","level":"warn","time":"18:45:9:30"}
{"message":"Some SQL Query6","level":"error","time":"18:45:9:31"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"18:45:9:688"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:2: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:3: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:4: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:5: NOTICE:  schema \"usersprojects\" does not exist, skipping\n","level":"warn","time":"18:45:9:688"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"18:45:9:994"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:2: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:3: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:4: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:5: NOTICE:  schema \"usersprojects\" does not exist, skipping\n","level":"warn","time":"18:45:9:995"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"18:45:10:603"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"18:45:10:955"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"18:45:11:341"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"18:45:11:711"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"18:45:12:64"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"18:45:12:432"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"18:45:12:814"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"18:45:13:193"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"18:45:13:561"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS Fribourg;\nCREATE TABLE IF NOT EXISTS Fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tours (\n  id INT GENERATED ALWAYS AS IDENTITY,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Fribourg.tours(id) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(nodeid, tourid)\n);\n","level":"silly","time":"18:45:14:336"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS Fribourg.tour_nodes;\nDROP TABLE IF EXISTS Fribourg.tours;\nDROP TABLE IF EXISTS Fribourg.resultsvehicles;\nDROP TABLE IF EXISTS Fribourg.results;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions;\nDROP TABLE IF EXISTS Fribourg.vehicletypes;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarios;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions_nodes_waste;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions;\nDROP TABLE IF EXISTS Fribourg.garbagescenarios;\nDROP TABLE IF EXISTS Fribourg.arcs;\nDROP TABLE IF EXISTS Fribourg.nodes;\nDROP SCHEMA IF EXISTS Fribourg;\n","level":"silly","time":"18:45:15:69"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"18:45:15:833"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"18:45:16:286"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS Fribourg;\nCREATE TABLE IF NOT EXISTS Fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tours (\n  id INT GENERATED ALWAYS AS IDENTITY,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Fribourg.tours(id) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(nodeid, tourid)\n);\n","level":"silly","time":"18:45:16:808"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS Fribourg.tour_nodes;\nDROP TABLE IF EXISTS Fribourg.tours;\nDROP TABLE IF EXISTS Fribourg.resultsvehicles;\nDROP TABLE IF EXISTS Fribourg.results;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions;\nDROP TABLE IF EXISTS Fribourg.vehicletypes;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarios;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions_nodes_waste;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions;\nDROP TABLE IF EXISTS Fribourg.garbagescenarios;\nDROP TABLE IF EXISTS Fribourg.arcs;\nDROP TABLE IF EXISTS Fribourg.nodes;\nDROP SCHEMA IF EXISTS Fribourg;\n","level":"silly","time":"18:45:17:395"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"18:45:17:835"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE NO ACTION,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE NO ACTION,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"18:45:18:301"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"18:45:18:657"}
