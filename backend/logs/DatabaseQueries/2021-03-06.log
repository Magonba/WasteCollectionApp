{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:35:44:740"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: ERROR:  deadlock detected\nDETAIL:  Process 10806 waits for AccessExclusiveLock on relation 970896 of database 24578; blocked by process 10745.\nProcess 10745 waits for RowShareLock on relation 970891 of database 24578; blocked by process 10806.\nHINT:  See server log for query details.\n","level":"warn","time":"0:35:44:745"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:35:45:293"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:35:48:92"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:159: NOTICE:  schema \"bern\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:167: NOTICE:  relation \"nodes\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:175: NOTICE:  relation \"arcs\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:179: NOTICE:  relation \"garbagescenarios\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:185: NOTICE:  relation \"garbagescenarioversions\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:194: NOTICE:  relation \"garbagescenarioversions_nodes_waste\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:198: NOTICE:  relation \"collectionpointscenarios\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:204: NOTICE:  relation \"collectionpointscenarioversions\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:213: NOTICE:  relation \"collectionpointscenarioversions_nodes_potcp\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:220: NOTICE:  relation \"vehicletypes\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:226: NOTICE:  relation \"vehicletypeversions\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:236: NOTICE:  relation \"vehicletypeversions_nodes_activatedarcs\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:249: NOTICE:  relation \"results\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:257: NOTICE:  relation \"resultsvehicles\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:265: NOTICE:  relation \"tours\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:274: NOTICE:  relation \"tour_nodes\" already exists, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:384: ERROR:  duplicate key value violates unique constraint \"nodes_pkey\"\nDETAIL:  Key (nodeid)=(1) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:385: ERROR:  duplicate key value violates unique constraint \"nodes_pkey\"\nDETAIL:  Key (nodeid)=(2) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:386: ERROR:  duplicate key value violates unique constraint \"nodes_pkey\"\nDETAIL:  Key (nodeid)=(3) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:387: ERROR:  duplicate key value violates unique constraint \"nodes_pkey\"\nDETAIL:  Key (nodeid)=(4) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:389: ERROR:  duplicate key value violates unique constraint \"arcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid)=(1, 2) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:390: ERROR:  duplicate key value violates unique constraint \"arcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid)=(2, 3) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:391: ERROR:  duplicate key value violates unique constraint \"arcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid)=(3, 4) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:392: ERROR:  duplicate key value violates unique constraint \"arcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid)=(4, 1) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:394: ERROR:  duplicate key value violates unique constraint \"garbagescenarios_pkey\"\nDETAIL:  Key (title)=(Summer) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:395: ERROR:  duplicate key value violates unique constraint \"garbagescenarios_pkey\"\nDETAIL:  Key (title)=(Winter) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:397: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_pkey\"\nDETAIL:  Key (title, timing)=(Summer, 2017-03-31 09:30:20) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:398: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_pkey\"\nDETAIL:  Key (title, timing)=(Summer, 2018-05-21 10:45:30) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:399: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_pkey\"\nDETAIL:  Key (title, timing)=(Winter, 2019-07-29 07:21:32) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:400: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_pkey\"\nDETAIL:  Key (title, timing)=(Winter, 2020-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:402: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_nodes_waste_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(1, Summer, 2017-03-31 09:30:20) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:403: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_nodes_waste_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(2, Summer, 2017-03-31 09:30:20) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:404: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_nodes_waste_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(3, Summer, 2017-03-31 09:30:20) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:406: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_nodes_waste_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(1, Summer, 2018-05-21 10:45:30) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:407: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_nodes_waste_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(2, Summer, 2018-05-21 10:45:30) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:408: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_nodes_waste_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(3, Summer, 2018-05-21 10:45:30) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:410: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_nodes_waste_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(1, Winter, 2019-07-29 07:21:32) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:411: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_nodes_waste_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(2, Winter, 2019-07-29 07:21:32) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:412: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_nodes_waste_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(3, Winter, 2019-07-29 07:21:32) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:414: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_nodes_waste_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(1, Winter, 2020-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:415: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_nodes_waste_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(2, Winter, 2020-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:416: ERROR:  duplicate key value violates unique constraint \"garbagescenarioversions_nodes_waste_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(3, Winter, 2020-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:418: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarios_pkey\"\nDETAIL:  Key (title)=(SmallContainers) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:419: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarios_pkey\"\nDETAIL:  Key (title)=(BigContainers) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:421: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_pkey\"\nDETAIL:  Key (title, timing)=(SmallContainers, 2016-03-31 09:30:20) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:422: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_pkey\"\nDETAIL:  Key (title, timing)=(SmallContainers, 2015-05-21 10:45:30) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:423: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_pkey\"\nDETAIL:  Key (title, timing)=(BigContainers, 2014-07-29 07:21:32) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:424: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_pkey\"\nDETAIL:  Key (title, timing)=(BigContainers, 2013-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:426: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_nodes_potcp_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(1, SmallContainers, 2016-03-31 09:30:20) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:427: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_nodes_potcp_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(2, SmallContainers, 2016-03-31 09:30:20) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:428: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_nodes_potcp_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(3, SmallContainers, 2016-03-31 09:30:20) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:430: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_nodes_potcp_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(1, SmallContainers, 2015-05-21 10:45:30) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:431: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_nodes_potcp_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(2, SmallContainers, 2015-05-21 10:45:30) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:432: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_nodes_potcp_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(3, SmallContainers, 2015-05-21 10:45:30) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:434: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_nodes_potcp_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(1, BigContainers, 2014-07-29 07:21:32) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:435: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_nodes_potcp_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(2, BigContainers, 2014-07-29 07:21:32) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:436: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_nodes_potcp_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(3, BigContainers, 2014-07-29 07:21:32) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:438: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_nodes_potcp_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(1, BigContainers, 2013-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:439: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_nodes_potcp_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(2, BigContainers, 2013-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:440: ERROR:  duplicate key value violates unique constraint \"collectionpointscenarioversions_nodes_potcp_pkey\"\nDETAIL:  Key (nodeid, title, timing)=(3, BigContainers, 2013-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:442: ERROR:  duplicate key value violates unique constraint \"vehicletypes_pkey\"\nDETAIL:  Key (title)=(Man20t) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:443: ERROR:  duplicate key value violates unique constraint \"vehicletypes_pkey\"\nDETAIL:  Key (title)=(Volkswagen3.5t) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:445: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_pkey\"\nDETAIL:  Key (title, timing)=(Man20t, 2012-03-31 09:30:20) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:446: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_pkey\"\nDETAIL:  Key (title, timing)=(Man20t, 2011-05-21 10:45:30) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:447: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_pkey\"\nDETAIL:  Key (title, timing)=(Volkswagen3.5t, 2010-07-29 07:21:32) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:448: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_pkey\"\nDETAIL:  Key (title, timing)=(Volkswagen3.5t, 2009-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:450: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_nodes_activatedarcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid, title, timing)=(1, 2, Man20t, 2012-03-31 09:30:20) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:451: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_nodes_activatedarcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid, title, timing)=(2, 3, Man20t, 2012-03-31 09:30:20) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:452: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_nodes_activatedarcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid, title, timing)=(3, 4, Man20t, 2012-03-31 09:30:20) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:454: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_nodes_activatedarcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid, title, timing)=(1, 2, Man20t, 2011-05-21 10:45:30) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:455: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_nodes_activatedarcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid, title, timing)=(2, 3, Man20t, 2011-05-21 10:45:30) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:456: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_nodes_activatedarcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid, title, timing)=(3, 4, Man20t, 2011-05-21 10:45:30) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:458: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_nodes_activatedarcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid, title, timing)=(1, 2, Volkswagen3.5t, 2010-07-29 07:21:32) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:459: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_nodes_activatedarcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid, title, timing)=(2, 3, Volkswagen3.5t, 2010-07-29 07:21:32) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:460: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_nodes_activatedarcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid, title, timing)=(3, 4, Volkswagen3.5t, 2010-07-29 07:21:32) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:462: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_nodes_activatedarcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid, title, timing)=(1, 2, Volkswagen3.5t, 2009-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:463: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_nodes_activatedarcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid, title, timing)=(2, 3, Volkswagen3.5t, 2009-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:464: ERROR:  duplicate key value violates unique constraint \"vehicletypeversions_nodes_activatedarcs_pkey\"\nDETAIL:  Key (sourcenodeid, destinationnodeid, title, timing)=(3, 4, Volkswagen3.5t, 2009-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:466: ERROR:  duplicate key value violates unique constraint \"results_pkey\"\nDETAIL:  Key (timing)=(2008-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:467: ERROR:  duplicate key value violates unique constraint \"results_pkey\"\nDETAIL:  Key (timing)=(2007-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:469: ERROR:  duplicate key value violates unique constraint \"resultsvehicles_pkey\"\nDETAIL:  Key (timingresult, titlevehicletype, timingvehicletype)=(2008-06-11 03:25:11, Man20t, 2011-05-21 10:45:30) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:470: ERROR:  duplicate key value violates unique constraint \"resultsvehicles_pkey\"\nDETAIL:  Key (timingresult, titlevehicletype, timingvehicletype)=(2008-06-11 03:25:11, Volkswagen3.5t, 2009-06-11 03:25:11) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:471: ERROR:  duplicate key value violates unique constraint \"resultsvehicles_pkey\"\nDETAIL:  Key (timingresult, titlevehicletype, timingvehicletype)=(2007-06-11 03:25:11, Man20t, 2011-05-21 10:45:30) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:473: ERROR:  duplicate key value violates unique constraint \"tours_pkey\"\nDETAIL:  Key (id)=(1) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:474: ERROR:  duplicate key value violates unique constraint \"tours_pkey\"\nDETAIL:  Key (id)=(2) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:475: ERROR:  duplicate key value violates unique constraint \"tours_pkey\"\nDETAIL:  Key (id)=(3) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:477: ERROR:  duplicate key value violates unique constraint \"tour_nodes_pkey\"\nDETAIL:  Key (nodeid, tourid)=(1, 1) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:478: ERROR:  duplicate key value violates unique constraint \"tour_nodes_pkey\"\nDETAIL:  Key (nodeid, tourid)=(2, 1) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:479: ERROR:  duplicate key value violates unique constraint \"tour_nodes_pkey\"\nDETAIL:  Key (nodeid, tourid)=(3, 1) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:481: ERROR:  duplicate key value violates unique constraint \"tour_nodes_pkey\"\nDETAIL:  Key (nodeid, tourid)=(1, 2) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:482: ERROR:  duplicate key value violates unique constraint \"tour_nodes_pkey\"\nDETAIL:  Key (nodeid, tourid)=(2, 2) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:483: ERROR:  duplicate key value violates unique constraint \"tour_nodes_pkey\"\nDETAIL:  Key (nodeid, tourid)=(3, 2) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:485: ERROR:  duplicate key value violates unique constraint \"tour_nodes_pkey\"\nDETAIL:  Key (nodeid, tourid)=(1, 3) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:486: ERROR:  duplicate key value violates unique constraint \"tour_nodes_pkey\"\nDETAIL:  Key (nodeid, tourid)=(2, 3) already exists.\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/setupSomeProjects.sql:487: ERROR:  duplicate key value violates unique constraint \"tour_nodes_pkey\"\nDETAIL:  Key (nodeid, tourid)=(3, 3) already exists.\n","level":"warn","time":"0:35:48:93"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:35:49:208"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:35:49:209"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:35:53:305"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:35:54:447"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:35:54:448"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:35:58:592"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:35:59:773"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:35:59:774"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:36:4:5"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:36:5:171"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:36:5:172"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:36:9:221"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:36:10:337"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:36:10:339"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:36:13:885"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:36:15:211"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:36:15:212"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:36:19:212"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:36:20:838"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:36:20:840"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:36:21:643"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:36:22:493"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"0:36:22:493"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:36:27:904"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:36:29:383"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:36:29:384"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:36:33:829"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:36:35:277"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:36:35:278"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:36:39:753"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:36:41:174"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:36:41:176"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:36:45:506"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:36:46:562"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:36:46:563"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:36:51:360"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:36:52:854"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:36:52:856"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:36:53:424"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:36:53:864"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"0:36:53:865"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:36:59:197"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:37:0:276"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:37:0:277"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:37:4:382"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:37:5:738"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:37:5:739"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:37:10:94"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:37:11:233"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:37:11:235"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:37:16:175"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:37:17:356"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:37:17:358"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:37:21:627"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:37:22:783"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:37:22:784"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:37:23:428"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:37:24:82"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"0:37:24:84"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:37:28:838"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:37:29:965"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:37:29:968"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:37:34:595"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:37:36:56"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:37:36:57"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:37:39:889"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:37:40:807"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:37:40:807"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:37:41:236"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:37:41:726"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"0:37:41:728"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"0:37:42:922"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:2: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:3: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:4: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:5: NOTICE:  schema \"usersprojects\" does not exist, skipping\n","level":"warn","time":"0:37:42:923"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"0:37:43:261"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:2: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:3: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:4: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:5: NOTICE:  schema \"usersprojects\" does not exist, skipping\n","level":"warn","time":"0:37:43:262"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:37:43:835"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"0:37:44:432"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:37:45:43"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"0:37:45:624"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:37:46:201"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"0:37:46:803"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:37:47:191"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"0:37:47:599"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:37:47:991"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS Fribourg;\nCREATE TABLE IF NOT EXISTS Fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n","level":"silly","time":"0:37:48:604"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS Fribourg.tour_nodes;\nDROP TABLE IF EXISTS Fribourg.tours;\nDROP TABLE IF EXISTS Fribourg.resultsvehicles;\nDROP TABLE IF EXISTS Fribourg.results;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions;\nDROP TABLE IF EXISTS Fribourg.vehicletypes;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarios;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions_nodes_waste;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions;\nDROP TABLE IF EXISTS Fribourg.garbagescenarios;\nDROP TABLE IF EXISTS Fribourg.arcs;\nDROP TABLE IF EXISTS Fribourg.nodes;\nDROP SCHEMA IF EXISTS Fribourg;\n","level":"silly","time":"0:37:49:467"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"0:37:50:65"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:37:50:457"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS Fribourg;\nCREATE TABLE IF NOT EXISTS Fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n","level":"silly","time":"0:37:51:63"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS Fribourg.tour_nodes;\nDROP TABLE IF EXISTS Fribourg.tours;\nDROP TABLE IF EXISTS Fribourg.resultsvehicles;\nDROP TABLE IF EXISTS Fribourg.results;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions;\nDROP TABLE IF EXISTS Fribourg.vehicletypes;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarios;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions_nodes_waste;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions;\nDROP TABLE IF EXISTS Fribourg.garbagescenarios;\nDROP TABLE IF EXISTS Fribourg.arcs;\nDROP TABLE IF EXISTS Fribourg.nodes;\nDROP SCHEMA IF EXISTS Fribourg;\n","level":"silly","time":"0:37:52:361"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"0:37:53:198"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:37:53:928"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"0:37:54:656"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:37:59:580"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:38:0:704"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:38:0:705"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:38:4:706"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:38:5:844"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:38:5:845"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:38:6:518"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:38:7:333"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"0:38:7:334"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:38:12:36"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:38:13:407"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:38:13:408"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:38:17:306"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:38:18:487"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:38:18:488"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:38:19:178"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:38:19:827"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"0:38:19:828"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:38:24:564"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:38:25:761"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:38:25:762"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:38:30:57"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:38:31:93"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:38:31:95"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:38:31:687"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:38:32:260"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"0:38:32:262"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:38:38:988"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:38:39:287"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:38:39:288"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:38:43:567"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:38:44:963"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:38:44:964"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:38:45:779"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:38:46:277"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"0:38:46:278"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:38:52:271"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:38:52:817"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:38:52:818"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:38:57:396"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:38:59:25"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:38:59:26"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:38:59:603"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:39:0:140"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"0:39:0:142"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:39:5:529"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:39:6:580"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:39:6:581"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:39:11:455"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:39:12:460"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:39:12:462"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:39:12:917"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:39:13:707"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"0:39:13:709"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:39:19:883"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:39:20:695"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:39:20:696"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:39:21:98"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:39:21:610"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"0:39:21:611"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:39:26:505"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:39:27:525"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:39:27:526"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:39:27:908"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:39:28:260"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"0:39:28:261"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:39:33:783"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:39:34:545"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:39:34:546"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:39:34:983"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:39:35:374"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"0:39:35:375"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"0:39:40:976"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:39:41:600"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"0:39:41:601"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"0:39:42:73"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"0:39:42:474"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"0:39:42:475"}
{"message":"Some SQL Query","level":"silly","time":"0:39:42:801"}
{"message":"Some SQL Query2","level":"debug","time":"0:39:42:802"}
{"message":"Some SQL Query3","level":"verbose","time":"0:39:42:802"}
{"message":"Some SQL Query4","level":"info","time":"0:39:42:802"}
{"message":"Some SQL Query5","level":"warn","time":"0:39:42:802"}
{"message":"Some SQL Query6","level":"error","time":"0:39:42:802"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:4:313"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:5:127"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:2:5:128"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:8:21"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:8:667"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:2:8:668"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:11:724"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:12:387"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:2:12:388"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:15:238"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:15:905"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:2:15:906"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:18:553"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:19:240"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:2:19:240"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:21:975"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:22:661"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:2:22:662"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:25:358"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:26:65"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:2:26:66"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:28:771"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:29:544"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:2:29:545"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:2:29:973"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:30:314"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"15:2:30:314"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:33:660"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:34:339"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:2:34:340"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:37:208"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:37:869"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:2:37:871"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:2:38:321"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:38:670"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"15:2:38:671"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:41:828"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:42:517"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:2:42:518"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:45:130"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:45:794"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:2:45:795"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:2:46:218"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:46:565"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"15:2:46:566"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:49:733"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:50:565"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:2:50:566"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:2:51:39"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:51:471"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"15:2:51:472"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:55:72"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:55:886"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:2:55:887"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:2:56:296"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:2:56:653"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"15:2:56:654"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:2:59:971"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:0:594"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:0:595"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:3:1:35"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:1:413"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"15:3:1:414"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:4:701"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:5:432"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:5:433"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:8:111"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:8:732"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:8:733"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:11:639"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:12:283"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:12:284"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:15:112"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:15:823"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:15:823"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:18:459"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:19:214"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:19:215"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:3:19:621"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:19:995"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"15:3:19:996"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:23:467"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:24:178"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:24:178"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:26:900"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:27:540"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:27:541"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:30:513"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:31:168"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:31:168"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:33:811"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:34:538"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:34:539"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:37:270"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:38:15"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:38:16"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:3:38:418"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:38:766"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"15:3:38:767"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:42:423"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:43:26"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:43:27"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:45:940"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:46:645"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:46:646"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:49:536"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:50:199"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:50:200"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:3:50:634"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:51:25"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"15:3:51:26"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:55:493"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:56:188"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:56:189"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:3:58:980"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:3:59:597"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:3:59:598"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:4:0:104"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:4:0:453"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"15:4:0:454"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"15:4:1:305"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:2: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:3: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:4: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:5: NOTICE:  schema \"usersprojects\" does not exist, skipping\n","level":"warn","time":"15:4:1:306"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"15:4:1:610"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:2: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:3: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:4: NOTICE:  schema \"usersprojects\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Database/deleteDB.sql:5: NOTICE:  schema \"usersprojects\" does not exist, skipping\n","level":"warn","time":"15:4:1:610"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:4:2:37"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"15:4:2:444"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:4:2:832"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"15:4:3:236"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:4:3:626"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"15:4:4:9"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:4:4:406"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"15:4:4:809"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:4:5:206"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS Fribourg;\nCREATE TABLE IF NOT EXISTS Fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n","level":"silly","time":"15:4:5:798"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS Fribourg.tour_nodes;\nDROP TABLE IF EXISTS Fribourg.tours;\nDROP TABLE IF EXISTS Fribourg.resultsvehicles;\nDROP TABLE IF EXISTS Fribourg.results;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions;\nDROP TABLE IF EXISTS Fribourg.vehicletypes;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarios;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions_nodes_waste;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions;\nDROP TABLE IF EXISTS Fribourg.garbagescenarios;\nDROP TABLE IF EXISTS Fribourg.arcs;\nDROP TABLE IF EXISTS Fribourg.nodes;\nDROP SCHEMA IF EXISTS Fribourg;\n","level":"silly","time":"15:4:6:381"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"15:4:6:873"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:4:7:322"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS Fribourg;\nCREATE TABLE IF NOT EXISTS Fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n","level":"silly","time":"15:4:7:980"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS Fribourg.tour_nodes;\nDROP TABLE IF EXISTS Fribourg.tours;\nDROP TABLE IF EXISTS Fribourg.resultsvehicles;\nDROP TABLE IF EXISTS Fribourg.results;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions_nodes_activatedarcs;\nDROP TABLE IF EXISTS Fribourg.vehicletypeversions;\nDROP TABLE IF EXISTS Fribourg.vehicletypes;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions_nodes_potcp;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarioversions;\nDROP TABLE IF EXISTS Fribourg.collectionpointscenarios;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions_nodes_waste;\nDROP TABLE IF EXISTS Fribourg.garbagescenarioversions;\nDROP TABLE IF EXISTS Fribourg.garbagescenarios;\nDROP TABLE IF EXISTS Fribourg.arcs;\nDROP TABLE IF EXISTS Fribourg.nodes;\nDROP SCHEMA IF EXISTS Fribourg;\n","level":"silly","time":"15:4:8:556"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"15:4:8:989"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:4:9:463"}
{"message":"\\c wastecollectiondata;\nDROP TABLE IF EXISTS usersprojects.userprojects;\nDROP TABLE IF EXISTS usersprojects.users;\nDROP TABLE IF EXISTS usersprojects.projects;\nDROP SCHEMA IF EXISTS usersprojects;\n","level":"silly","time":"15:4:9:833"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:4:12:950"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:4:13:618"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:4:13:619"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:4:16:612"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:4:17:224"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:4:17:225"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:4:17:647"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:4:17:997"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"15:4:17:998"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:4:21:116"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:4:21:797"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:4:21:798"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:4:24:392"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:4:25:68"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:4:25:68"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:4:25:484"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:4:25:834"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"15:4:25:834"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:4:28:912"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:4:29:584"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:4:29:585"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:4:32:184"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:4:32:846"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:4:32:847"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:4:33:268"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:4:33:621"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"15:4:33:621"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\n--create usersprojects tables\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n--for Model testing (in order to test if database reading works properly)\n--first create some users\nINSERT INTO usersprojects.users VALUES ('a.b@c.de', TRUE, 'secure');\nINSERT INTO usersprojects.users VALUES ('e.d@c.ba', FALSE, 'supersecure');\nINSERT INTO usersprojects.users VALUES ('f.g@h.ij', FALSE, 'hypersecure');\n--second create some projects (just in usersprojects.projects)\nINSERT INTO usersprojects.projects VALUES ('fribourg');\nINSERT INTO usersprojects.projects VALUES ('Bern');\n--third create some user - project connections\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('a.b@c.de', 'Bern');\nINSERT INTO usersprojects.userprojects VALUES ('e.d@c.ba', 'fribourg');\nINSERT INTO usersprojects.userprojects VALUES ('f.g@h.ij', 'Bern');\n--fourth create the corresponding project schemas from second\n--fribourg project\nCREATE SCHEMA IF NOT EXISTS fribourg;\nCREATE TABLE IF NOT EXISTS fribourg.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES fribourg.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES fribourg.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES fribourg.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES fribourg.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES fribourg.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES fribourg.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS fribourg.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES fribourg.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES fribourg.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS fribourg.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES fribourg.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES fribourg.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--Bern project\nCREATE SCHEMA IF NOT EXISTS Bern;\nCREATE TABLE IF NOT EXISTS Bern.nodes (\n  nodeid INT NOT NULL,\n  xcoordinate INT NOT NULL,\n  ycoordinate INT NOT NULL,\n  vehicledepot BOOLEAN NOT NULL,\n  wastedepot BOOLEAN NOT NULL,\n  PRIMARY KEY(nodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.arcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  distance INT NOT NULL,\n  CONSTRAINT fk_sourcenode FOREIGN KEY(sourcenodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_destinationnode FOREIGN KEY(destinationnodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title) REFERENCES Bern.garbagescenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.garbagescenarioversions_nodes_waste (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  wasteamount INT NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(title, timing) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarios (\n  title varchar(255) NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title) REFERENCES Bern.collectionpointscenarios(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.collectionpointscenarioversions_nodes_potcp (\n  nodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  potentialcollectionpoint BOOLEAN NOT NULL,\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(title, timing) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypes (\n  title varchar(255) NOT NULL,\n  averagespeed INT NOT NULL,\n  averagestoptime INT NOT NULL,\n  vehiclecapacity INT NOT NULL,\n  PRIMARY KEY(title)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions (\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title) REFERENCES Bern.vehicletypes(title) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.vehicletypeversions_nodes_activatedarcs (\n  sourcenodeid INT NOT NULL,\n  destinationnodeid INT NOT NULL,\n  title varchar(255) NOT NULL,\n  timing TIMESTAMP NOT NULL,\n  activated BOOLEAN NOT NULL,\n  CONSTRAINT fk_arc FOREIGN KEY(sourcenodeid, destinationnodeid) REFERENCES Bern.arcs(sourcenodeid, destinationnodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(title, timing) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(sourcenodeid, destinationnodeid, title, timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.results (\n  timing TIMESTAMP NOT NULL,\n  titlegarbsc varchar(255) NOT NULL,\n  timinggarbsc TIMESTAMP NOT NULL,\n  titlecpsc varchar(255) NOT NULL,\n  timingcpsc TIMESTAMP NOT NULL,\n  model varchar(3) NOT NULL,\n  maxwalkingdistance INT NOT NULL,\n  totaltime INT NOT NULL,\n  CONSTRAINT fk_garbagescenario FOREIGN KEY(titlegarbsc, timinggarbsc) REFERENCES Bern.garbagescenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_collectionpointscenario FOREIGN KEY(titlecpsc, timingcpsc) REFERENCES Bern.collectionpointscenarioversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timing)\n);\nCREATE TABLE IF NOT EXISTS Bern.resultsvehicles (\n  timingresult TIMESTAMP NOT NULL,\n  titlevehicletype varchar(255) NOT NULL,\n  timingvehicletype TIMESTAMP NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_vehicletype FOREIGN KEY(titlevehicletype, timingvehicletype) REFERENCES Bern.vehicletypeversions(title, timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(timingresult, titlevehicletype, timingvehicletype)\n);\nCREATE TABLE IF NOT EXISTS Bern.tours (\n  id INT NOT NULL,\n  timingresult TIMESTAMP NOT NULL,\n  tourtime INT NOT NULL,\n  tourwaste INT NOT NULL,\n  CONSTRAINT fk_result FOREIGN KEY(timingresult) REFERENCES Bern.results(timing) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(id)\n);\nCREATE TABLE IF NOT EXISTS Bern.tour_nodes (\n  nodeid INT NOT NULL,\n  tourid INT NOT NULL,\n  wastecollected INT NOT NULL,\n  ordering INT NOT NULL, --first, second, third, etc. node in the tour\n  CONSTRAINT fk_node FOREIGN KEY(nodeid) REFERENCES Bern.nodes(nodeid) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_tour FOREIGN KEY(tourid) REFERENCES Bern.tours(id) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(nodeid, tourid)\n);\n--fifth fill up the project schemas tables with some random date\n--fill up project fribourg\nINSERT INTO fribourg.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO fribourg.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO fribourg.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO fribourg.arcs VALUES (1, 2, 67);\nINSERT INTO fribourg.arcs VALUES (2, 3, 40);\nINSERT INTO fribourg.arcs VALUES (3, 4, 32);\nINSERT INTO fribourg.arcs VALUES (4, 1, 21);\nINSERT INTO fribourg.garbagescenarios VALUES ('Summer');\nINSERT INTO fribourg.garbagescenarios VALUES ('Winter');\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO fribourg.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO fribourg.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO fribourg.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO fribourg.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO fribourg.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO fribourg.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO fribourg.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO fribourg.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO fribourg.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO fribourg.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO fribourg.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO fribourg.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO fribourg.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO fribourg.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO fribourg.tour_nodes VALUES (3, 3, 412, 2);\n--Bern project (same as fribourg because lazy)\nINSERT INTO Bern.nodes VALUES (1, 123, 23, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (2, 34, 54, TRUE, FALSE);\nINSERT INTO Bern.nodes VALUES (3, 29, 12, FALSE, TRUE);\nINSERT INTO Bern.nodes VALUES (4, 765, 19, FALSE, TRUE);\nINSERT INTO Bern.arcs VALUES (1, 2, 67);\nINSERT INTO Bern.arcs VALUES (2, 3, 40);\nINSERT INTO Bern.arcs VALUES (3, 4, 32);\nINSERT INTO Bern.arcs VALUES (4, 1, 21);\nINSERT INTO Bern.garbagescenarios VALUES ('Summer');\nINSERT INTO Bern.garbagescenarios VALUES ('Winter');\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions VALUES ('Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 735);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2017-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), 903);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 602);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 789);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 1043);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 1567);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 7993);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 9009);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (1, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 2004);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (2, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 8590);\nINSERT INTO Bern.garbagescenarioversions_nodes_waste VALUES (3, 'Winter', TO_TIMESTAMP('2020-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 10780);\nINSERT INTO Bern.collectionpointscenarios VALUES ('SmallContainers');\nINSERT INTO Bern.collectionpointscenarios VALUES ('BigContainers');\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions VALUES ('BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2016-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2014-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (1, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (2, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.collectionpointscenarioversions_nodes_potcp VALUES (3, 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypes VALUES ('Man20t', 20, 15, 150);\nINSERT INTO Bern.vehicletypes VALUES ('Volkswagen3.5t', 30, 5, 50);\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions VALUES ('Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2012-03-31 9:30:20', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), FALSE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2010-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (1, 2, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (2, 3, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.vehicletypeversions_nodes_activatedarcs VALUES (3, 4, 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), TRUE);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Summer', TO_TIMESTAMP('2018-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'SmallContainers', TO_TIMESTAMP('2015-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'), 'K1', 798, 324);\nINSERT INTO Bern.results VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Winter', TO_TIMESTAMP('2019-07-29 7:21:32', 'YYYY-MM-DD HH:MI:SS'), 'BigContainers', TO_TIMESTAMP('2013-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'K3', 912, 451);\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Volkswagen3.5t', TO_TIMESTAMP('2009-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.resultsvehicles VALUES (TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 'Man20t', TO_TIMESTAMP('2011-05-21 10:45:30', 'YYYY-MM-DD HH:MI:SS'));\nINSERT INTO Bern.tours VALUES (1, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 123, 874);\nINSERT INTO Bern.tours VALUES (2, TO_TIMESTAMP('2008-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 543, 1093);\nINSERT INTO Bern.tours VALUES (3, TO_TIMESTAMP('2007-06-11 3:25:11', 'YYYY-MM-DD HH:MI:SS'), 732, 9874);\nINSERT INTO Bern.tour_nodes VALUES (1, 1, 209, 1);\nINSERT INTO Bern.tour_nodes VALUES (2, 1, 190, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 1, 409, 3);\nINSERT INTO Bern.tour_nodes VALUES (1, 2, 323, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 2, 376, 2);\nINSERT INTO Bern.tour_nodes VALUES (3, 2, 312, 1);\nINSERT INTO Bern.tour_nodes VALUES (1, 3, 367, 3);\nINSERT INTO Bern.tour_nodes VALUES (2, 3, 309, 1);\nINSERT INTO Bern.tour_nodes VALUES (3, 3, 412, 2);\n","level":"silly","time":"15:4:36:794"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:4:37:797"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table fribourg.nodes\ndrop cascades to table fribourg.arcs\ndrop cascades to table fribourg.garbagescenarios\ndrop cascades to table fribourg.garbagescenarioversions\ndrop cascades to table fribourg.garbagescenarioversions_nodes_waste\ndrop cascades to table fribourg.collectionpointscenarios\ndrop cascades to table fribourg.collectionpointscenarioversions\ndrop cascades to table fribourg.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table fribourg.vehicletypes\ndrop cascades to table fribourg.vehicletypeversions\ndrop cascades to table fribourg.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table fribourg.results\ndrop cascades to table fribourg.resultsvehicles\ndrop cascades to table fribourg.tours\ndrop cascades to table fribourg.tour_nodes\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  drop cascades to 15 other objects\nDETAIL:  drop cascades to table bern.nodes\ndrop cascades to table bern.arcs\ndrop cascades to table bern.garbagescenarios\ndrop cascades to table bern.garbagescenarioversions\ndrop cascades to table bern.garbagescenarioversions_nodes_waste\ndrop cascades to table bern.collectionpointscenarios\ndrop cascades to table bern.collectionpointscenarioversions\ndrop cascades to table bern.collectionpointscenarioversions_nodes_potcp\ndrop cascades to table bern.vehicletypes\ndrop cascades to table bern.vehicletypeversions\ndrop cascades to table bern.vehicletypeversions_nodes_activatedarcs\ndrop cascades to table bern.results\ndrop cascades to table bern.resultsvehicles\ndrop cascades to table bern.tours\ndrop cascades to table bern.tour_nodes\n","level":"warn","time":"15:4:37:798"}
{"message":"\\c wastecollectiondata;\nCREATE SCHEMA IF NOT EXISTS usersprojects;\nCREATE TABLE IF NOT EXISTS usersprojects.users (\n  email varchar(255) NOT NULL,\n  admini BOOLEAN NOT NULL,\n  passwort varchar(255) NOT NULL,\n  PRIMARY KEY(email)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.projects (\n  projectname varchar(255) NOT NULL,\n  PRIMARY KEY(projectname)\n);\nCREATE TABLE IF NOT EXISTS usersprojects.userprojects (\n  userid varchar(255) NOT NULL,\n  projectid varchar(255) NOT NULL,\n  CONSTRAINT fk_user FOREIGN KEY(userid) REFERENCES usersprojects.users(email) ON UPDATE CASCADE ON DELETE CASCADE,\n  CONSTRAINT fk_project FOREIGN KEY(projectid) REFERENCES usersprojects.projects(projectname) ON UPDATE CASCADE ON DELETE CASCADE,\n  PRIMARY KEY(userid, projectid)\n);\n","level":"silly","time":"15:4:38:191"}
{"message":"\\c wastecollectiondata\n--go to wastecollectiondata database\nDROP SCHEMA IF EXISTS usersprojects CASCADE;\nDROP SCHEMA IF EXISTS fribourg CASCADE;\nDROP SCHEMA IF EXISTS bern CASCADE;\n","level":"silly","time":"15:4:38:549"}
{"message":"psql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:3: NOTICE:  drop cascades to 3 other objects\nDETAIL:  drop cascades to table usersprojects.users\ndrop cascades to table usersprojects.projects\ndrop cascades to table usersprojects.userprojects\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:4: NOTICE:  schema \"fribourg\" does not exist, skipping\npsql:/home/magonba/Magonba/Desktop/SharedFolderVM/WasteCollectionApp/backend/Testing/deleteSomeProjects.sql:5: NOTICE:  schema \"bern\" does not exist, skipping\n","level":"warn","time":"15:4:38:549"}
{"message":"Some SQL Query","level":"silly","time":"15:4:38:890"}
{"message":"Some SQL Query2","level":"debug","time":"15:4:38:891"}
{"message":"Some SQL Query3","level":"verbose","time":"15:4:38:891"}
{"message":"Some SQL Query4","level":"info","time":"15:4:38:891"}
{"message":"Some SQL Query5","level":"warn","time":"15:4:38:891"}
{"message":"Some SQL Query6","level":"error","time":"15:4:38:892"}
